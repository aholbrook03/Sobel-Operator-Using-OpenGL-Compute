#version 430 core

layout (local_size_x = 8, local_size_y = 8) in;
layout (binding = 0, rgba32f) uniform readonly image2D in_image;
layout (binding = 1) uniform writeonly image2D out_image;

const int sobel_x[3][3] = {
	{-1, 0, 1},
	{-2, 0, 2},
	{-1, 0, 1}
};

const int sobel_y[3][3] = {
	{-1, -2, -1},
	{0, 0, 0},
	{1, 2, 1}
};

const float INVSQRT_3 = 1.0f / sqrt(3.0f);

void main()
{
	ivec2 pos = ivec2(gl_GlobalInvocationID.xy);
	ivec2 size = imageSize(in_image);
	if (pos.x < 1 || pos.x > size.x - 2) return;	// return if outside image
	if (pos.y < 1 || pos.y > size.y - 2) return;

	float xvalue = 0.0f;
	float yvalue = 0.0f;

	for (int row = -1; row < 2; ++row)
	{
		for (int col = -1; col < 2; ++col)
		{
			float color_mag = length(imageLoad(in_image, pos + ivec2(col, row)).xyz);
			xvalue += color_mag * sobel_x[row + 1][col + 1];
			yvalue += color_mag * sobel_y[row + 1][col + 1];
		}
	}

	float value = clamp((xvalue + yvalue) * INVSQRT_3, 0.0f, 1.0f);
	vec4 color = vec4(value, value, value, 1.0f);
	imageStore(out_image, pos, color);
}